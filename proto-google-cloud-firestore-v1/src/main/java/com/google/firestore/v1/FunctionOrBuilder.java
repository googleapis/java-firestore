/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/v1/document.proto

// Protobuf Java Version: 3.25.2
package com.google.firestore.v1;

public interface FunctionOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.firestore.v1.Function)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The name of the function to evaluate.
   *
   * **Requires:**
   *
   * * must be in snake case (lower case with underscore separator).
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * The name of the function to evaluate.
   *
   * **Requires:**
   *
   * * must be in snake case (lower case with underscore separator).
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Ordered list of arguments the given function expects.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.Value args = 2;</code>
   */
  java.util.List<com.google.firestore.v1.Value> getArgsList();
  /**
   *
   *
   * <pre>
   * Ordered list of arguments the given function expects.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.Value args = 2;</code>
   */
  com.google.firestore.v1.Value getArgs(int index);
  /**
   *
   *
   * <pre>
   * Ordered list of arguments the given function expects.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.Value args = 2;</code>
   */
  int getArgsCount();
  /**
   *
   *
   * <pre>
   * Ordered list of arguments the given function expects.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.Value args = 2;</code>
   */
  java.util.List<? extends com.google.firestore.v1.ValueOrBuilder> getArgsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Ordered list of arguments the given function expects.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.Value args = 2;</code>
   */
  com.google.firestore.v1.ValueOrBuilder getArgsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Optional named arguments that certain functions may support.
   * </pre>
   *
   * <code>map&lt;string, .google.firestore.v1.Value&gt; options = 3;</code>
   */
  int getOptionsCount();
  /**
   *
   *
   * <pre>
   * Optional named arguments that certain functions may support.
   * </pre>
   *
   * <code>map&lt;string, .google.firestore.v1.Value&gt; options = 3;</code>
   */
  boolean containsOptions(java.lang.String key);
  /** Use {@link #getOptionsMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.firestore.v1.Value> getOptions();
  /**
   *
   *
   * <pre>
   * Optional named arguments that certain functions may support.
   * </pre>
   *
   * <code>map&lt;string, .google.firestore.v1.Value&gt; options = 3;</code>
   */
  java.util.Map<java.lang.String, com.google.firestore.v1.Value> getOptionsMap();
  /**
   *
   *
   * <pre>
   * Optional named arguments that certain functions may support.
   * </pre>
   *
   * <code>map&lt;string, .google.firestore.v1.Value&gt; options = 3;</code>
   */
  /* nullable */
  com.google.firestore.v1.Value getOptionsOrDefault(
      java.lang.String key,
      /* nullable */
      com.google.firestore.v1.Value defaultValue);
  /**
   *
   *
   * <pre>
   * Optional named arguments that certain functions may support.
   * </pre>
   *
   * <code>map&lt;string, .google.firestore.v1.Value&gt; options = 3;</code>
   */
  com.google.firestore.v1.Value getOptionsOrThrow(java.lang.String key);
}
