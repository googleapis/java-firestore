/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/v1/firestore.proto

// Protobuf Java Version: 3.25.2
package com.google.firestore.v1;

public interface CommitResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.firestore.v1.CommitResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The result of applying the writes.
   *
   * This i-th write result corresponds to the i-th write in the
   * request.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.WriteResult write_results = 1;</code>
   */
  java.util.List<com.google.firestore.v1.WriteResult> getWriteResultsList();
  /**
   *
   *
   * <pre>
   * The result of applying the writes.
   *
   * This i-th write result corresponds to the i-th write in the
   * request.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.WriteResult write_results = 1;</code>
   */
  com.google.firestore.v1.WriteResult getWriteResults(int index);
  /**
   *
   *
   * <pre>
   * The result of applying the writes.
   *
   * This i-th write result corresponds to the i-th write in the
   * request.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.WriteResult write_results = 1;</code>
   */
  int getWriteResultsCount();
  /**
   *
   *
   * <pre>
   * The result of applying the writes.
   *
   * This i-th write result corresponds to the i-th write in the
   * request.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.WriteResult write_results = 1;</code>
   */
  java.util.List<? extends com.google.firestore.v1.WriteResultOrBuilder>
      getWriteResultsOrBuilderList();
  /**
   *
   *
   * <pre>
   * The result of applying the writes.
   *
   * This i-th write result corresponds to the i-th write in the
   * request.
   * </pre>
   *
   * <code>repeated .google.firestore.v1.WriteResult write_results = 1;</code>
   */
  com.google.firestore.v1.WriteResultOrBuilder getWriteResultsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * The time at which the commit occurred. Any read with an equal or greater
   * `read_time` is guaranteed to see the effects of the commit.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp commit_time = 2;</code>
   *
   * @return Whether the commitTime field is set.
   */
  boolean hasCommitTime();
  /**
   *
   *
   * <pre>
   * The time at which the commit occurred. Any read with an equal or greater
   * `read_time` is guaranteed to see the effects of the commit.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp commit_time = 2;</code>
   *
   * @return The commitTime.
   */
  com.google.protobuf.Timestamp getCommitTime();
  /**
   *
   *
   * <pre>
   * The time at which the commit occurred. Any read with an equal or greater
   * `read_time` is guaranteed to see the effects of the commit.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp commit_time = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCommitTimeOrBuilder();
}
