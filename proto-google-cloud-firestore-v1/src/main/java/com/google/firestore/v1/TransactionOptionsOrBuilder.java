// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/v1/common.proto

package com.google.firestore.v1;

public interface TransactionOptionsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.firestore.v1.TransactionOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The transaction can only be used for read operations.
   * </pre>
   *
   * <code>.google.firestore.v1.TransactionOptions.ReadOnly read_only = 2;</code>
   */
  boolean hasReadOnly();
  /**
   *
   *
   * <pre>
   * The transaction can only be used for read operations.
   * </pre>
   *
   * <code>.google.firestore.v1.TransactionOptions.ReadOnly read_only = 2;</code>
   */
  com.google.firestore.v1.TransactionOptions.ReadOnly getReadOnly();
  /**
   *
   *
   * <pre>
   * The transaction can only be used for read operations.
   * </pre>
   *
   * <code>.google.firestore.v1.TransactionOptions.ReadOnly read_only = 2;</code>
   */
  com.google.firestore.v1.TransactionOptions.ReadOnlyOrBuilder getReadOnlyOrBuilder();

  /**
   *
   *
   * <pre>
   * The transaction can be used for both read and write operations.
   * </pre>
   *
   * <code>.google.firestore.v1.TransactionOptions.ReadWrite read_write = 3;</code>
   */
  boolean hasReadWrite();
  /**
   *
   *
   * <pre>
   * The transaction can be used for both read and write operations.
   * </pre>
   *
   * <code>.google.firestore.v1.TransactionOptions.ReadWrite read_write = 3;</code>
   */
  com.google.firestore.v1.TransactionOptions.ReadWrite getReadWrite();
  /**
   *
   *
   * <pre>
   * The transaction can be used for both read and write operations.
   * </pre>
   *
   * <code>.google.firestore.v1.TransactionOptions.ReadWrite read_write = 3;</code>
   */
  com.google.firestore.v1.TransactionOptions.ReadWriteOrBuilder getReadWriteOrBuilder();

  public com.google.firestore.v1.TransactionOptions.ModeCase getModeCase();
}
