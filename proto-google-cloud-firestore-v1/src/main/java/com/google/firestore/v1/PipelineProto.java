/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/v1/pipeline.proto

// Protobuf Java Version: 3.25.2
package com.google.firestore.v1;

public final class PipelineProto {
  private PipelineProto() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_firestore_v1_StructuredPipeline_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_firestore_v1_StructuredPipeline_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_firestore_v1_StructuredPipeline_OptionsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_firestore_v1_StructuredPipeline_OptionsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n\"google/firestore/v1/pipeline.proto\022\023go"
          + "ogle.firestore.v1\032\"google/firestore/v1/d"
          + "ocument.proto\"\330\001\n\022StructuredPipeline\022/\n\010"
          + "pipeline\030\001 \001(\0132\035.google.firestore.v1.Pip"
          + "eline\022E\n\007options\030\002 \003(\01324.google.firestor"
          + "e.v1.StructuredPipeline.OptionsEntry\032J\n\014"
          + "OptionsEntry\022\013\n\003key\030\001 \001(\t\022)\n\005value\030\002 \001(\013"
          + "2\032.google.firestore.v1.Value:\0028\001B\210\001\n\027com"
          + ".google.firestore.v1B\rPipelineProtoP\001\242\002\004"
          + "GCFS\252\002\031Google.Cloud.Firestore.V1\312\002\031Googl"
          + "e\\Cloud\\Firestore\\V1\352\002\034Google::Cloud::Fi"
          + "restore::V1b\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
              com.google.firestore.v1.DocumentProto.getDescriptor(),
            });
    internal_static_google_firestore_v1_StructuredPipeline_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_google_firestore_v1_StructuredPipeline_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_firestore_v1_StructuredPipeline_descriptor,
            new java.lang.String[] {
              "Pipeline", "Options",
            });
    internal_static_google_firestore_v1_StructuredPipeline_OptionsEntry_descriptor =
        internal_static_google_firestore_v1_StructuredPipeline_descriptor.getNestedTypes().get(0);
    internal_static_google_firestore_v1_StructuredPipeline_OptionsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_firestore_v1_StructuredPipeline_OptionsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    com.google.firestore.v1.DocumentProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
