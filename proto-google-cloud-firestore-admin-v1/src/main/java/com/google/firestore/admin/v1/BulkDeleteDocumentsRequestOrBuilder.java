/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/admin/v1/firestore_admin.proto

// Protobuf Java Version: 3.25.3
package com.google.firestore.admin.v1;

public interface BulkDeleteDocumentsRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.firestore.admin.v1.BulkDeleteDocumentsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. Database to operate. Should be of the form:
   * `projects/{project_id}/databases/{database_id}`.
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Required. Database to operate. Should be of the form:
   * `projects/{project_id}/databases/{database_id}`.
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Optional. IDs of the collection groups to delete. Unspecified means all
   * collection groups.
   *
   * Each collection group in this list must be unique.
   * </pre>
   *
   * <code>repeated string collection_ids = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the collectionIds.
   */
  java.util.List<java.lang.String> getCollectionIdsList();
  /**
   *
   *
   * <pre>
   * Optional. IDs of the collection groups to delete. Unspecified means all
   * collection groups.
   *
   * Each collection group in this list must be unique.
   * </pre>
   *
   * <code>repeated string collection_ids = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of collectionIds.
   */
  int getCollectionIdsCount();
  /**
   *
   *
   * <pre>
   * Optional. IDs of the collection groups to delete. Unspecified means all
   * collection groups.
   *
   * Each collection group in this list must be unique.
   * </pre>
   *
   * <code>repeated string collection_ids = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The collectionIds at the given index.
   */
  java.lang.String getCollectionIds(int index);
  /**
   *
   *
   * <pre>
   * Optional. IDs of the collection groups to delete. Unspecified means all
   * collection groups.
   *
   * Each collection group in this list must be unique.
   * </pre>
   *
   * <code>repeated string collection_ids = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the collectionIds at the given index.
   */
  com.google.protobuf.ByteString getCollectionIdsBytes(int index);

  /**
   *
   *
   * <pre>
   * Optional. Namespaces to delete.
   *
   * An empty list means all namespaces. This is the recommended
   * usage for databases that don't use namespaces.
   *
   * An empty string element represents the default namespace. This should be
   * used if the database has data in non-default namespaces, but doesn't want
   * to delete from them.
   *
   * Each namespace in this list must be unique.
   * </pre>
   *
   * <code>repeated string namespace_ids = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the namespaceIds.
   */
  java.util.List<java.lang.String> getNamespaceIdsList();
  /**
   *
   *
   * <pre>
   * Optional. Namespaces to delete.
   *
   * An empty list means all namespaces. This is the recommended
   * usage for databases that don't use namespaces.
   *
   * An empty string element represents the default namespace. This should be
   * used if the database has data in non-default namespaces, but doesn't want
   * to delete from them.
   *
   * Each namespace in this list must be unique.
   * </pre>
   *
   * <code>repeated string namespace_ids = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of namespaceIds.
   */
  int getNamespaceIdsCount();
  /**
   *
   *
   * <pre>
   * Optional. Namespaces to delete.
   *
   * An empty list means all namespaces. This is the recommended
   * usage for databases that don't use namespaces.
   *
   * An empty string element represents the default namespace. This should be
   * used if the database has data in non-default namespaces, but doesn't want
   * to delete from them.
   *
   * Each namespace in this list must be unique.
   * </pre>
   *
   * <code>repeated string namespace_ids = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The namespaceIds at the given index.
   */
  java.lang.String getNamespaceIds(int index);
  /**
   *
   *
   * <pre>
   * Optional. Namespaces to delete.
   *
   * An empty list means all namespaces. This is the recommended
   * usage for databases that don't use namespaces.
   *
   * An empty string element represents the default namespace. This should be
   * used if the database has data in non-default namespaces, but doesn't want
   * to delete from them.
   *
   * Each namespace in this list must be unique.
   * </pre>
   *
   * <code>repeated string namespace_ids = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the namespaceIds at the given index.
   */
  com.google.protobuf.ByteString getNamespaceIdsBytes(int index);
}
