// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firestore/admin/v1/database.proto

package com.google.firestore.admin.v1;

public final class DatabaseProto {
  private DatabaseProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_firestore_admin_v1_Database_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_firestore_admin_v1_Database_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(google/firestore/admin/v1/database.pro" +
      "to\022\031google.firestore.admin.v1\032\037google/ap" +
      "i/field_behavior.proto\032\031google/api/resou" +
      "rce.proto\032\036google/protobuf/duration.prot" +
      "o\032\037google/protobuf/timestamp.proto\032\034goog" +
      "le/api/annotations.proto\"\360\003\n\010Database\022\014\n" +
      "\004name\030\001 \001(\t\022\023\n\013location_id\030\t \001(\t\022>\n\004type" +
      "\030\n \001(\01620.google.firestore.admin.v1.Datab" +
      "ase.DatabaseType\022M\n\020concurrency_mode\030\017 \001" +
      "(\01623.google.firestore.admin.v1.Database." +
      "ConcurrencyMode\022\014\n\004etag\030c \001(\t\"W\n\014Databas" +
      "eType\022\035\n\031DATABASE_TYPE_UNSPECIFIED\020\000\022\024\n\020" +
      "FIRESTORE_NATIVE\020\001\022\022\n\016DATASTORE_MODE\020\002\"w" +
      "\n\017ConcurrencyMode\022 \n\034CONCURRENCY_MODE_UN" +
      "SPECIFIED\020\000\022\016\n\nOPTIMISTIC\020\001\022\017\n\013PESSIMIST" +
      "IC\020\002\022!\n\035OPTIMISTIC_WITH_ENTITY_GROUPS\020\003:" +
      "R\352AO\n!firestore.googleapis.com/Database\022" +
      "\'projects/{project}/databases/{database}" +
      "R\001\001B\341\001\n\035com.google.firestore.admin.v1B\rD" +
      "atabaseProtoP\001Z>google.golang.org/genpro" +
      "to/googleapis/firestore/admin/v1;admin\242\002" +
      "\004GCFS\252\002\037Google.Cloud.Firestore.Admin.V1\312" +
      "\002\037Google\\Cloud\\Firestore\\Admin\\V1\352\002#Goog" +
      "le::Cloud::Firestore::Admin::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.FieldBehaviorProto.getDescriptor(),
          com.google.api.ResourceProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.api.AnnotationsProto.getDescriptor(),
        });
    internal_static_google_firestore_admin_v1_Database_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_firestore_admin_v1_Database_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_firestore_admin_v1_Database_descriptor,
        new java.lang.String[] { "Name", "LocationId", "Type", "ConcurrencyMode", "Etag", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.ResourceProto.resource);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
    com.google.api.ResourceProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.api.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
